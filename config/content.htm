<h1>About</h1>
<p><img alt="" height="199" src="/images/小貓咪.jpg" width="211"/></p>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4><span style="color: #ffff00;">利用 cmsimde 建立靜態網誌方法:</span></h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>Cmsimde</h1>
<p><a href="https://github.com/mdecourse/cmsimde.git">https://github.com/mdecourse/cmsimde.git</a><span> </span>是一套利用 Python 解譯程式語言所編寫的網際內容管理系統, 使用者可以用來建立動態網站, 靜態網站, 網誌與網際簡報系統.</p>
<p>程式語言就其執行的方式, 可以分為編譯式與解譯式等兩種.</p>
<p>編譯式語言例如: C 程式語言</p>
<p>解譯式語言例如: Python 程式語言</p>
<p>編寫程式語言是工程師與電腦溝通的途徑之一, 工程師編寫計算機程式在電腦上執行, 可以透過電腦強大與重複的運算能力來解決問題.</p>
<p>CMSiMDE 就是工程師希望將各種與產品開發的過程資料, 存放在網站上, 除了可用於工程師之間的溝通外, 還能夠將產品開發的細節, 或者特定工具的使用詳細記錄, 以作為往後的參考.</p>
<h4>如何使用 CMSiMDE</h4>
<p>(1) 以子模組的方式使用 CMSiMDE</p>
<p>將 Github 倉儲 git clone 到近端工作區之後, 可以利用 git submodule add 指令將遠端倉儲中的 CMSiMDE 程式碼納為倉儲中的 cmsimde 子目錄, 並且保持與遠端原始碼的版次關聯 (也就是能夠指定採用遠端特定版本的 CMSiMDE 程式碼).</p>
<p>好處: 子模組可以與遠端官方的倉儲保持關聯, 一旦 CMSiMDE 更新版本, 使用者可以利用 git pull 直接拉下遠端 CMSiMDE 的最新程式碼.</p>
<p>壞處: 使用者若要 git clone 遠端的倉儲至近端, 需要加上 --recurse-submodules 選項</p>
<p>(2) 不以子模組的方式使用 CMSiMDE</p>
<p>假如不需要保持與遠端 CMSiMDE 倉儲特定版次的關聯性, 可以直接將 CMSiMDE 倉儲中的檔案, 直接放入 cmsimde 目錄, 並將其中 up_dir 的內容複製到希望建立網頁的倉儲主目錄中即可.</p>
<p>好處: 使用者可以直接使用 git clone 指令, 拉下遠端倉儲的所有資料.</p>
<p>壞處: 失去與遠端 CMSiMDE 倉儲的關聯, 假如要使用最新改版後的 CMSiMDE 原始碼, 必須另外 git clone 然後再取代倉儲中 cmsimde 的所有檔案.</p>
<p><span style="color: #000000;"><strong></strong></span></p>
<h1>有關本網站</h1>
<p>這門課程在教導學員如何利用網際環境管理與工程應用相關的內容管理.</p>
<p>總共使用兩套網際內容管理系統:</p>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a></p>
<p><a href="https://www.blogger.com/">https://www.blogger.com/</a></p>
<p>Please use your student number to<span> </span><a href="https://github.com/join">register a github account</a>.</p>
<p>請利用學號註冊一個 Github 帳號</p>
<p>Repository (倉儲):<span> </span><a href="https://github.com/mdecourse/wcmj2020">https://github.com/mdecourse/wcmj2020</a> </p>
<p>Project (專案):<span> </span><a href="https://github.com/mdecourse/wcmj2020/projects/1">https://github.com/mdecourse/wcmj2020/projects/1</a> </p>
<p>Gitter (討論區):<span> </span><a href="https://gitter.im/mdecourse/wcmj2020">https://gitter.im/mdecourse/wcmj2020</a> </p>
<p>Web site (網站): <a href="https://mde.tw/wcmj2020">https://mde.tw/wcmj2020</a> </p>
<p>Blog (網誌):<span> </span><a href="https://mde.tw/wcmj2020/blog">https://mde.tw/wcmj2020/blog</a> </p>
<p>Presentation (簡報):<span> </span><a href="https://mde.tw/wcmj2020/reveal">https://mde.tw/wcmj2020/reveal</a> </p>
<p>電腦輔助設計室與協同設計室行事曆</p>
<p><span style="color: #ff00ff;"></span></p>
<h1>分組結果</h1>
<p><span>group 1</span><br/><span>Repository:<span> </span></span><a href="https://github.com/50833110/wcmj2020">50833110</a><span><span> </span>| Site:<span> </span></span><a href="https://50833110.github.io/wcmj2020">50833110</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833112/wcmj2020">50833112</a><span><span> </span>| Site:<span> </span></span><a href="https://50833112.github.io/wcmj2020">50833112</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833115/wcmj2020">50833115</a><span><span> </span>| Site:<span> </span></span><a href="https://50833115.github.io/wcmj2020">50833115</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833123/wcmj2020">50833123</a><span><span> </span>| Site:<span> </span></span><a href="https://50833123.github.io/wcmj2020">50833123</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833127/wcmj2020">50833127</a><span><span> </span>| Site:<span> </span></span><a href="https://50833127.github.io/wcmj2020">50833127</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833128/wcmj2020">50833128</a><span><span> </span>| Site:<span> </span></span><a href="https://50833128.github.io/wcmj2020">50833128</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833129/wcmj2020">50833129</a><span><span> </span>| Site:<span> </span></span><a href="https://50833129.github.io/wcmj2020">50833129</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833131/wcmj2020">50833131</a><span><span> </span>| Site:<span> </span></span><a href="https://50833131.github.io/wcmj2020">50833131</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833133/wcmj2020">50833133</a><span><span> </span>| Site:<span> </span></span><a href="https://50833133.github.io/wcmj2020">50833133</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833138/wcmj2020">50833138</a><span><span> </span>| Site:<span> </span></span><a href="https://50833138.github.io/wcmj2020">50833138</a><br/><span>==============================</span><br/><span>group 2</span><br/><span>Repository:<span> </span></span><a href="https://github.com/50833101/wcmj2020">50833101</a><span><span> </span>| Site:<span> </span></span><a href="https://50833101.github.io/wcmj2020">50833101</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833107/wcmj2020">50833107</a><span><span> </span>| Site:<span> </span></span><a href="https://50833107.github.io/wcmj2020">50833107</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833108/wcmj2020">50833108</a><span><span> </span>| Site:<span> </span></span><a href="https://50833108.github.io/wcmj2020">50833108</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833111/wcmj2020">50833111</a><span><span> </span>| Site:<span> </span></span><a href="https://50833111.github.io/wcmj2020">50833111</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833117/wcmj2020">50833117</a><span><span> </span>| Site:<span> </span></span><a href="https://50833117.github.io/wcmj2020">50833117</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833119/wcmj2020">50833119</a><span><span> </span>| Site:<span> </span></span><a href="https://50833119.github.io/wcmj2020">50833119</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833122/wcmj2020">50833122</a><span><span> </span>| Site:<span> </span></span><a href="https://50833122.github.io/wcmj2020">50833122</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833126/wcmj2020">50833126</a><span><span> </span>| Site:<span> </span></span><a href="https://50833126.github.io/wcmj2020">50833126</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833130/wcmj2020">50833130</a><span><span> </span>| Site:<span> </span></span><a href="https://50833130.github.io/wcmj2020">50833130</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833134/wcmj2020">50833134</a><span><span> </span>| Site:<span> </span></span><a href="https://50833134.github.io/wcmj2020">50833134</a><br/><span>==============================</span><br/><span>group 3</span><br/><span>Repository:<span> </span></span><a href="https://github.com/50833104/wcmj2020">50833104</a><span><span> </span>| Site:<span> </span></span><a href="https://50833104.github.io/wcmj2020">50833104</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833106/wcmj2020">50833106</a><span><span> </span>| Site:<span> </span></span><a href="https://50833106.github.io/wcmj2020">50833106</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833113/wcmj2020">50833113</a><span><span> </span>| Site:<span> </span></span><a href="https://50833113.github.io/wcmj2020">50833113</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833114/wcmj2020">50833114</a><span><span> </span>| Site:<span> </span></span><a href="https://50833114.github.io/wcmj2020">50833114</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833116/wcmj2020">50833116</a><span><span> </span>| Site:<span> </span></span><a href="https://50833116.github.io/wcmj2020">50833116</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833118/wcmj2020">50833118</a><span><span> </span>| Site:<span> </span></span><a href="https://50833118.github.io/wcmj2020">50833118</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833120/wcmj2020">50833120</a><span><span> </span>| Site:<span> </span></span><a href="https://50833120.github.io/wcmj2020">50833120</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833125/wcmj2020">50833125</a><span><span> </span>| Site:<span> </span></span><a href="https://50833125.github.io/wcmj2020">50833125</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833140/wcmj2020">50833140</a><span><span> </span>| Site:<span> </span></span><a href="https://50833140.github.io/wcmj2020">50833140</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833141/wcmj2020">50833141</a><span><span> </span>| Site:<span> </span></span><a href="https://50833141.github.io/wcmj2020">50833141</a><br/><span>==============================</span><br/><span>group 4</span><br/><span>Repository:<span> </span></span><a href="https://github.com/50833102/wcmj2020">50833102</a><span><span> </span>| Site:<span> </span></span><a href="https://50833102.github.io/wcmj2020">50833102</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833103/wcmj2020">50833103</a><span><span> </span>| Site:<span> </span></span><a href="https://50833103.github.io/wcmj2020">50833103</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833105/wcmj2020">50833105</a><span><span> </span>| Site:<span> </span></span><a href="https://50833105.github.io/wcmj2020">50833105</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833109/wcmj2020">50833109</a><span><span> </span>| Site:<span> </span></span><a href="https://50833109.github.io/wcmj2020">50833109</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833121/wcmj2020">50833121</a><span><span> </span>| Site:<span> </span></span><a href="https://50833121.github.io/wcmj2020">50833121</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833124/wcmj2020">50833124</a><span><span> </span>| Site:<span> </span></span><a href="https://50833124.github.io/wcmj2020">50833124</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833135/wcmj2020">50833135</a><span><span> </span>| Site:<span> </span></span><a href="https://50833135.github.io/wcmj2020">50833135</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833136/wcmj2020">50833136</a><span><span> </span>| Site:<span> </span></span><a href="https://50833136.github.io/wcmj2020">50833136</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833137/wcmj2020">50833137</a><span><span> </span>| Site:<span> </span></span><a href="https://50833137.github.io/wcmj2020">50833137</a><br/><span>Repository:<span> </span></span><a href="https://github.com/50833139/wcmj2020">50833139</a><span><span> </span>| Site:<span> </span></span><a href="https://50833139.github.io/wcmj2020">50833139</a></p>
<h1>主題</h1>
<h4>Google Blogger</h4>
<p>Login to your gm email account and download<span> </span><a href="https://drive.google.com/file/d/12Ypf02FVP9l7a9ufZfhRicN-rzCKkAf5/view?usp=sharing">2010_BeginningGoogleBlogger.pdf</a></p>
<h4>WCM</h4>
<p>Login to your gm email account and download<span> </span><a href="https://drive.google.com/file/d/1gLb9_6FEv58wVX2uShG_3sgUseFEcH_y/view?usp=sharing">2020wcm_topic_1.pdf</a>.</p>
<p>What is a content management system?</p>
<p>Analyzing your information life cycle.</p>
<p>Overview of enterprise content management.</p>
<h4><span>Git</span></h4>
<p><span>Login to your gm email account and download<span> </span><a href="https://drive.google.com/file/d/1YkLWsDVRlScSuSBQv2Aa1JSjvbydJli-/view?usp=sharing">IntroductionToVersionControlAndGit.pdf</a>.</span></p>
<p><span>What is version control?</span></p>
<p><span>Git installation and setup.</span></p>
<p><span>Git getting started.</span></p>
<p><span>Commits and remote git.</span></p>
<h3><span>Github.</span></h3>
<p><span>Login to your gm email account and download<span> </span><a href="https://drive.google.com/file/d/1vnkDLW1cg8hKEMUdjDstvWqiS4R1n3IC/view?usp=sharing">GithubPrimer.pdf</a></span></p>
<p><span>Login to your gm email account and download<span> </span><a href="https://drive.google.com/file/d/18MiM_d95ustohAqoUfx-gc-2dUE9Av0n/view?usp=sharing">ConflictsGUIToolAdvGit.pdf</a></span></p>
<h1><span>w9</span></h1>
<p><span>學習這幾周下來之心得</span></p>
<p><span>w1教我們如何建立blogger</span></p>
<p><span>w2-4則是教我們如何用git指令建立cmsimde網站，並如何維護</span></p>
<p><span>而w6-w9則是教學如何開直播</span></p>
<h1>上課內容重點筆記</h1>
<h2>電腦之硬體設備</h2>
<p>CPU</p>
<p>中央處理器，電腦的心臟，速度越快效果越好，若電腦為一家店，則CPU可以說是店員，反應越快越佳。</p>
<p>記憶體RAM</p>
<p>電腦系統運作實戰存資料的地方，其大小也是影響電腦速率快慢的重要因素。</p>
<p>硬碟</p>
<p>儲存系統軟體、應用軟體及資料的地方，一台主機可以裝多顆硬碟。</p>
<h2>IPv4與IPv6之差別</h2>
<p>IPv4的格式是32位元長度，位置能提供2的32次方個，換算後約42億個。雖然有這麼多個，但依舊被消耗殆盡。</p>
<p><span>IPv6，他所能提供的ip位置遠遠超過IPv4的數量，簡單來說，轉換到IPv6後ip位置的數量幾乎不可能用完。</span></p>
<h1><span>紙本筆記</span></h1>
<p><span><img alt="" height="563" src="/images/IMG_6248.JPG" width="422"/><img alt="" height="533" src="/images/IMG_6249.JPG" width="400"/><img alt="" height="533" src="/images/IMG_6250.JPG" width="400"/><img alt="" height="533" src="/images/IMG_6251.JPG" width="400"/></span></p>
<h1><span>w10如何用ssh</span></h1>
<p>由於在電腦教室時採用純 IPv6 協定上網, 因此為了能夠在近端將倉儲改版資料推送到目前只接受 IPv4 協定連線的 github, 以下除了將原本以 https 對 github 連線, 改為以 ssh 協定連線外, 在 Windows 環境下必須利用 putty 與 plink, 設定 putty 格式的 .ppk 以及能夠同時支援 IPv4 與 IPv6 的代理主機.</p>
<p>設定步驟如下:</p>
<p>1. 下載 Putty 工具組</p>
<p><span>從 </span><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/" rel="nofollow">https://www.chiark.greenend.org.uk/~sgtatham/putty/</a><span><span> </span>下載一般版, 或從<span> </span></span><a href="http://jakub.kotrla.net/putty/" rel="nofollow">http://jakub.kotrla.net/putty/</a><span><span> </span>下載特殊的可攜版本.</span></p>
<p><span>2. 利用 y:\portablegit\bin\sh.exe 進入 shell 命令環境後, 以 </span></p>
<div>
<div class="syntaxhighlighter js" id="highlighter_191820">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">ssh-keygen -t rsa -b 4096 -C </code><code class="js string">"使用者學號"</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>在 /y/home/.ssh 目錄下建立 id_rsa 與 id_rsa.pub 等 private key 與 public key</p>
<p>之後以 SciTE 開啟 id_rsa.pub 後, 將此 public key 的內容, 以新增添加到 Github.com 帳號下 personal settings -&gt; SSH and GPG keys 頁面下.</p>
<p>3. 接下來要利用 puttygen.exe 將 id_rsa 轉為 Putty 可以解讀的 .ppk 格式, 並修改隨身系統的啟動批次檔案, 指定利用 putty 目錄下的 plink 執行 git 指令的網路代理設定.</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_924293">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">修改啟動的 start.bat 加入下列設定:</code></div>
<div class="line number2 index1 alt1"> </div>
<div class="line number3 index2 alt2"><code class="js plain">set GIT_HOME=%Disk%:\portablegit\bin\</code></div>
<div class="line number4 index3 alt1"><code class="js plain">set GIT_SSH=%Disk%:\putty\plink.exe</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>4. 利用 puttygen.exe 載入第二步驟所建立的 private key, 也就是 id_rsa.</p>
<p>開啟 puttygen 之後, 以右下方的 load 載入 id_rsa, 成功載入後, 利用 save private key 按鈕, 將已經轉為 putty 格式的 .ppk 存檔. 此一 .ppk 檔案必須在設定 putty 中 github.com session 時, 在 Connection-&gt;SSH-&gt;Auth 項目下, 將轉檔後的 .ppk 指向 private key file for authentication 欄位. </p>
<p>並在 Connection-&gt;Proxy 項目下, 指定 Proxy type: HTTP, 並將 IPv6 代理主機設為 ::53 或 ::42 埠號設為 3128.</p>
<p>5. 之後確定 home 下的 .ssh 目錄中的 config 設定檔案為:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_167439">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js preprocessor"># no proxy at home</code></div>
<div class="line number2 index1 alt1"><code class="js preprocessor">#ProxyCommand y:/PortableGit/mingw64/bin/connect.exe -H proxy.mde.nfu.edu.tw:3128 %h %p</code></div>
<div class="line number3 index2 alt2"><code class="js preprocessor"># set git_ssh=y:/putty/plink.exe with auth under putty github.com session setup</code></div>
<div class="line number4 index3 alt1"><code class="js plain">ProxyCommand y:/putty/plink.exe github.com %h %p</code></div>
<div class="line number5 index4 alt2"><code class="js spaces"> </code> </div>
<div class="line number6 index5 alt1"><code class="js plain">Host github.com</code></div>
<div class="line number7 index6 alt2"><code class="js spaces">    </code><code class="js plain">User git</code></div>
<div class="line number8 index7 alt1"><code class="js spaces">    </code><code class="js plain">Port 22</code></div>
<div class="line number9 index8 alt2"><code class="js spaces">    </code><code class="js plain">Hostname github.com</code></div>
<div class="line number10 index9 alt1"><code class="js spaces">    </code> </div>
<div class="line number11 index10 alt2"><code class="js spaces">    </code><code class="js preprocessor"># for connect.exe need openssh key format</code></div>
<div class="line number12 index11 alt1"><code class="js spaces">    </code><code class="js preprocessor">#IdentityFile "y:\home\.ssh\id_rsa_mdecourse"</code></div>
<div class="line number13 index12 alt2"><code class="js spaces">    </code><code class="js preprocessor"># for plink.exe need rsa key format but set under putty github.com session</code></div>
<div class="line number14 index13 alt1"><code class="js spaces">    </code><code class="js preprocessor"># plink.exe do not need the following setting</code></div>
<div class="line number15 index14 alt2"><code class="js spaces">    </code><code class="js preprocessor">#IdentityFile "y:\home\.ssh\mdecourse_putty_private.ppk"</code></div>
<div class="line number16 index15 alt1"><code class="js spaces"> </code> </div>
<div class="line number17 index16 alt2"><code class="js spaces">    </code><code class="js plain">TCPKeepAlive yes</code></div>
<div class="line number18 index17 alt1"><code class="js spaces">    </code><code class="js plain">IdentitiesOnly yes</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>6. 最後再將 wcmj2020 倉儲中 .git 目錄下的 config 檔案中的連線協定, 由 https 改為採 ssh 連線: 範例如下:</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_448571">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">[core]</code></div>
<div class="line number2 index1 alt1"><code class="js spaces">    </code><code class="js plain">repositoryformatversion = 0</code></div>
<div class="line number3 index2 alt2"><code class="js spaces">    </code><code class="js plain">filemode = </code><code class="js keyword">false</code></div>
<div class="line number4 index3 alt1"><code class="js spaces">    </code><code class="js plain">bare = </code><code class="js keyword">false</code></div>
<div class="line number5 index4 alt2"><code class="js spaces">    </code><code class="js plain">logallrefupdates = </code><code class="js keyword">true</code></div>
<div class="line number6 index5 alt1"><code class="js spaces">    </code><code class="js plain">symlinks = </code><code class="js keyword">false</code></div>
<div class="line number7 index6 alt2"><code class="js spaces">    </code><code class="js plain">ignorecase = </code><code class="js keyword">true</code></div>
<div class="line number8 index7 alt1"><code class="js plain">[submodule]</code></div>
<div class="line number9 index8 alt2"><code class="js spaces">    </code><code class="js plain">active = .</code></div>
<div class="line number10 index9 alt1"><code class="js plain">[remote </code><code class="js string">"origin"</code><code class="js plain">]</code></div>
<div class="line number11 index10 alt2"><code class="js spaces">    </code><code class="js preprocessor">#url = https://github.com/mdecourse/wcmj2020.git</code></div>
<div class="line number12 index11 alt1"><code class="js spaces">    </code><code class="js plain">url = git@github.com:mdecourse/wcmj2020.git</code></div>
<div class="line number13 index12 alt2"><code class="js spaces">    </code><code class="js plain">fetch = +refs/heads/*:refs/remotes/origin/*</code></div>
<div class="line number14 index13 alt1"><code class="js plain">[branch </code><code class="js string">"master"</code><code class="js plain">]</code></div>
<div class="line number15 index14 alt2"><code class="js spaces">    </code><code class="js plain">remote = origin</code></div>
<div class="line number16 index15 alt1"><code class="js spaces">    </code><code class="js plain">merge = refs/heads/master</code></div>
<div class="line number17 index16 alt2"><code class="js plain">[submodule </code><code class="js string">"cmsimde"</code><code class="js plain">]</code></div>
<div class="line number18 index17 alt1"><code class="js spaces">    </code><code class="js plain">url = https:</code><code class="js comments">//github.com/mdecourse/cmsimde.git</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>之後就可以透過近端的 .ppk private key 與 Github.com 上的 public key 對應, 無需輸入帳號密碼就可以進行 git push了喔。..</p>
<h1>W13</h1>
<p>Pelican Blog 內容與 Google Blogger 同步</p>
<p>利用 Windows 10 設定 -&gt; 選擇預設網頁瀏覽器, 使用 Google Chrome 作為預設瀏覽器.</p>
<p>隨身程式系統必須安裝 <span>google-api-python-client 與 oauth2client</span><br/><br/>pip install google-api-python-client oauth2client<br/><br/>OAuth 2.0 client IDs 程式類別可以選擇 other<br/><br/>使用者完成 client_secrets.json 設定後, 必須將檔案存在倉儲目錄外部</p>
<p>add_to_blogger 按鈕內容:</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_11181">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
<div class="line number71 index70 alt2">71</div>
<div class="line number72 index71 alt1">72</div>
<div class="line number73 index72 alt2">73</div>
<div class="line number74 index73 alt1">74</div>
<div class="line number75 index74 alt2">75</div>
<div class="line number76 index75 alt1">76</div>
<div class="line number77 index76 alt2">77</div>
<div class="line number78 index77 alt1">78</div>
<div class="line number79 index78 alt2">79</div>
<div class="line number80 index79 alt1">80</div>
<div class="line number81 index80 alt2">81</div>
<div class="line number82 index81 alt1">82</div>
<div class="line number83 index82 alt2">83</div>
<div class="line number84 index83 alt1">84</div>
<div class="line number85 index84 alt2">85</div>
<div class="line number86 index85 alt1">86</div>
<div class="line number87 index86 alt2">87</div>
<div class="line number88 index87 alt1">88</div>
<div class="line number89 index88 alt2">89</div>
<div class="line number90 index89 alt1">90</div>
<div class="line number91 index90 alt2">91</div>
<div class="line number92 index91 alt1">92</div>
<div class="line number93 index92 alt2">93</div>
<div class="line number94 index93 alt1">94</div>
<div class="line number95 index94 alt2">95</div>
<div class="line number96 index95 alt1">96</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py keyword">from</code> <code class="py plain">markdown </code><code class="py keyword">import</code> <code class="py plain">markdown</code></div>
<div class="line number2 index1 alt1"><code class="py keyword">from</code> <code class="py plain">oauth2client </code><code class="py keyword">import</code> <code class="py plain">client</code></div>
<div class="line number3 index2 alt2"><code class="py keyword">from</code> <code class="py plain">googleapiclient </code><code class="py keyword">import</code> <code class="py plain">sample_tools</code></div>
<div class="line number4 index3 alt1"><code class="py keyword">import</code> <code class="py plain">os</code></div>
<div class="line number5 index4 alt2"> </div>
<div class="line number6 index5 alt1"><code class="py plain">os.environ[</code><code class="py string">'TZ'</code><code class="py plain">] </code><code class="py keyword">=</code> <code class="py string">'Asia/Taipei'</code></div>
<div class="line number7 index6 alt2"><code class="py plain">argv </code><code class="py keyword">=</code> <code class="py plain">""</code></div>
<div class="line number8 index7 alt1"><code class="py comments"># 認證並建立服務</code></div>
<div class="line number9 index8 alt2"><code class="py comments"># name of the api is "blogger", version is "v3"</code></div>
<div class="line number10 index9 alt1"><code class="py comments"># description of the api is __doc__</code></div>
<div class="line number11 index10 alt2"><code class="py comments"># file name of the application: location of client_secrets.json</code></div>
<div class="line number12 index11 alt1"><code class="py plain">service, flags </code><code class="py keyword">=</code> <code class="py plain">sample_tools.init(</code></div>
<div class="line number13 index12 alt2"><code class="py spaces">  </code><code class="py plain">argv, </code><code class="py string">'blogger'</code><code class="py plain">, </code><code class="py string">'v3'</code><code class="py plain">, __doc__, </code><code class="py string">"./../../client_secrets.json"</code><code class="py plain">,</code></div>
<div class="line number14 index13 alt1"><code class="py spaces">  </code><code class="py plain">scope</code><code class="py keyword">=</code><code class="py string">'https://www.googleapis.com/auth/blogger'</code><code class="py plain">)</code></div>
<div class="line number15 index14 alt2"> </div>
<div class="line number16 index15 alt1"> </div>
<div class="line number17 index16 alt2"><code class="py keyword">def</code> <code class="py plain">get_cat_tag_content(data):</code></div>
<div class="line number18 index17 alt1"><code class="py spaces">    </code><code class="py comments"># 請注意, 因為 data 來自 .md 的檔案 內容, 第1行為 ---</code></div>
<div class="line number19 index18 alt2"><code class="py spaces">    </code><code class="py comments"># 用跳行符號分割</code></div>
<div class="line number20 index19 alt1"><code class="py spaces">    </code><code class="py plain">data_list </code><code class="py keyword">=</code> <code class="py plain">data.split(</code><code class="py string">"\n"</code><code class="py plain">)</code></div>
<div class="line number21 index20 alt2"><code class="py spaces">    </code><code class="py comments">#第 2 行為 title</code></div>
<div class="line number22 index21 alt1"><code class="py spaces">    </code><code class="py plain">title</code><code class="py keyword">=</code> <code class="py plain">data_list[</code><code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number23 index22 alt2"><code class="py spaces">    </code><code class="py comments">#第 4 行為 category</code></div>
<div class="line number24 index23 alt1"><code class="py spaces">    </code><code class="py plain">category </code><code class="py keyword">=</code> <code class="py plain">data_list[</code><code class="py value">3</code><code class="py plain">]</code></div>
<div class="line number25 index24 alt2"><code class="py spaces">    </code><code class="py comments">#第 5 行為 tags</code></div>
<div class="line number26 index25 alt1"><code class="py spaces">    </code><code class="py plain">tags </code><code class="py keyword">=</code> <code class="py plain">data_list[</code><code class="py value">4</code><code class="py plain">]</code></div>
<div class="line number27 index26 alt2"><code class="py spaces">    </code><code class="py comments"># 有多項資料的 content 型別為數列</code></div>
<div class="line number28 index27 alt1"><code class="py spaces">    </code><code class="py comments"># 再將第 9 行之後的資料數列串回成以跳行隔開的資料</code></div>
<div class="line number29 index28 alt2"><code class="py spaces">    </code><code class="py plain">content </code><code class="py keyword">=</code> <code class="py string">"\n"</code><code class="py plain">.join(data_list[</code><code class="py value">8</code><code class="py plain">:])</code></div>
<div class="line number30 index29 alt1"><code class="py spaces">    </code><code class="py comments"># 先將截斷摘要與內文的 pelican md 檔按符號, 換成 Blogger 的 &lt;!--more--&gt;</code></div>
<div class="line number31 index30 alt2"><code class="py spaces">    </code><code class="py plain">content </code><code class="py keyword">=</code> <code class="py plain">content.replace(</code><code class="py string">'&lt;!-- PELICAN_END_SUMMARY --&gt;'</code><code class="py plain">, </code><code class="py string">'&lt;!--more--&gt;'</code><code class="py plain">)</code></div>
<div class="line number32 index31 alt1"><code class="py spaces">    </code><code class="py comments"># 接著若內容有 ~~~python 與 ~~~ 則換成 Wordpress 格式</code></div>
<div class="line number33 index32 alt2"><code class="py spaces">    </code><code class="py comments">#content = content.replace('~~~python', '[code lang="python"]')</code></div>
<div class="line number34 index33 alt1"><code class="py spaces">    </code><code class="py comments">#content = content.replace('~~~', '[/code]')</code></div>
<div class="line number35 index34 alt2"><code class="py spaces">    </code><code class="py keyword">return</code> <code class="py plain">title, category, tags, content</code></div>
<div class="line number36 index35 alt1"> </div>
<div class="line number37 index36 alt2"><code class="py comments"># 從目前所在節點的 body pan 中取出類別, tags 以及文章內容</code></div>
<div class="line number38 index37 alt1"><code class="py comments"># p.h 為 @clean filename.md</code></div>
<div class="line number39 index38 alt2"><code class="py comments"># 因為要使用 @clean 節點掛上為後的 blogger post_id, 因此改為讀 .md 檔案</code></div>
<div class="line number40 index39 alt1"><code class="py plain">md_filename </code><code class="py keyword">=</code> <code class="py plain">p.h.split(</code><code class="py string">" "</code><code class="py plain">)[</code><code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number41 index40 alt2"><code class="py plain">with </code><code class="py functions">open</code><code class="py plain">(md_filename, </code><code class="py string">'r'</code><code class="py plain">, encoding</code><code class="py keyword">=</code><code class="py string">"utf-8"</code><code class="py plain">) as content_file:</code></div>
<div class="line number42 index41 alt1"><code class="py spaces">    </code><code class="py plain">md_content </code><code class="py keyword">=</code> <code class="py plain">content_file.read()</code></div>
<div class="line number43 index42 alt2"><code class="py comments"># title_str, category_str, tags_str, content = get_cat_tag_content(p.b)</code></div>
<div class="line number44 index43 alt1"><code class="py plain">title_str, category_str, tags_str, content </code><code class="py keyword">=</code> <code class="py plain">get_cat_tag_content(md_content)</code></div>
<div class="line number45 index44 alt2"><code class="py plain">category </code><code class="py keyword">=</code> <code class="py plain">category_str.split(</code><code class="py string">":"</code><code class="py plain">)[</code><code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number46 index45 alt1"><code class="py plain">tags </code><code class="py keyword">=</code> <code class="py plain">tags_str.split(</code><code class="py string">":"</code><code class="py plain">)[</code><code class="py value">1</code><code class="py plain">].split(</code><code class="py string">","</code><code class="py plain">)</code></div>
<div class="line number47 index46 alt2"><code class="py plain">tags.append(category)</code></div>
<div class="line number48 index47 alt1"><code class="py comments"># title 是一個單獨的字串</code></div>
<div class="line number49 index48 alt2"><code class="py plain">title </code><code class="py keyword">=</code> <code class="py plain">title_str.split(</code><code class="py string">":"</code><code class="py plain">)[</code><code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number50 index49 alt1"><code class="py comments"># 將 markdown 格式 content 轉為 html</code></div>
<div class="line number51 index50 alt2"><code class="py plain">content </code><code class="py keyword">=</code> <code class="py plain">markdown(content)</code></div>
<div class="line number52 index51 alt1"><code class="py comments"># 以下處理 content 的 &lt;h2&gt; 標題</code></div>
<div class="line number53 index52 alt2"><code class="py plain">content </code><code class="py keyword">=</code> <code class="py plain">content.replace(</code><code class="py string">"&lt;h2&gt;"</code><code class="py plain">, </code><code class="py string">"&lt;h2&gt;&lt;font size='4'&gt;"</code><code class="py plain">)</code></div>
<div class="line number54 index53 alt1"><code class="py plain">content </code><code class="py keyword">=</code> <code class="py plain">content.replace(</code><code class="py string">"&lt;/h2&gt;"</code><code class="py plain">, </code><code class="py string">"&lt;/font&gt;&lt;/h2&gt;"</code><code class="py plain">)</code></div>
<div class="line number55 index54 alt2"><code class="py comments"># g.es(content)</code></div>
<div class="line number56 index55 alt1"> </div>
<div class="line number57 index56 alt2"><code class="py keyword">try</code><code class="py plain">:</code></div>
<div class="line number58 index57 alt1"><code class="py spaces">    </code><code class="py comments">'''</code></div>
<div class="line number59 index58 alt2"><code class="py spaces">    </code><code class="py comments">users = service.users()</code></div>
<div class="line number60 index59 alt1"><code class="py spaces">    </code><code class="py comments"># 取得使用者 profile 資料</code></div>
<div class="line number61 index60 alt2"><code class="py spaces">    </code><code class="py comments">user = users.get(userId='self').execute()</code></div>
<div class="line number62 index61 alt1"><code class="py spaces">    </code><code class="py comments">print('網誌名稱: %s' % user['displayName'])</code></div>
<div class="line number63 index62 alt2"><code class="py spaces">    </code><code class="py comments">'''</code></div>
<div class="line number64 index63 alt1"><code class="py spaces">    </code><code class="py plain">blogs </code><code class="py keyword">=</code> <code class="py plain">service.blogs()</code></div>
<div class="line number65 index64 alt2"><code class="py spaces">    </code><code class="py comments"># 取得使用者所建立網誌名稱</code></div>
<div class="line number66 index65 alt1"><code class="py spaces">    </code><code class="py plain">blogs </code><code class="py keyword">=</code> <code class="py plain">blogs.listByUser(userId</code><code class="py keyword">=</code><code class="py string">'self'</code><code class="py plain">).execute()</code></div>
<div class="line number67 index66 alt2"><code class="py spaces">    </code><code class="py comments"># post_id is now blogs["items"][0]["id"]</code></div>
<div class="line number68 index67 alt1"><code class="py spaces">    </code><code class="py plain">blog_id </code><code class="py keyword">=</code> <code class="py plain">blogs[</code><code class="py string">"items"</code><code class="py plain">][</code><code class="py value">0</code><code class="py plain">][</code><code class="py string">"id"</code><code class="py plain">]</code></div>
<div class="line number69 index68 alt2"><code class="py spaces">    </code><code class="py comments">#for blog in blogs['items']:</code></div>
<div class="line number70 index69 alt1"><code class="py spaces">        </code><code class="py comments">#print(blog['name'], blog['url'])</code></div>
<div class="line number71 index70 alt2"><code class="py spaces">    </code><code class="py plain">posts </code><code class="py keyword">=</code> <code class="py plain">service.posts()</code></div>
<div class="line number72 index71 alt1"><code class="py spaces">    </code><code class="py comments"># 新增網誌 post 時, 需要 post_id</code></div>
<div class="line number73 index72 alt2"><code class="py spaces">    </code><code class="py plain">body </code><code class="py keyword">=</code> <code class="py plain">{</code></div>
<div class="line number74 index73 alt1"><code class="py spaces">    </code><code class="py string">"kind"</code><code class="py plain">: </code><code class="py string">"blogger#post"</code><code class="py plain">,</code></div>
<div class="line number75 index74 alt2"><code class="py spaces">    </code><code class="py string">"id"</code><code class="py plain">: blog_id,</code></div>
<div class="line number76 index75 alt1"><code class="py spaces">    </code><code class="py string">"title"</code><code class="py plain">: title,</code></div>
<div class="line number77 index76 alt2"><code class="py spaces">    </code><code class="py comments"># 利用 markdown 函式, 將 .md 的內文轉為 html, 作為 Blogger 的文章內容</code></div>
<div class="line number78 index77 alt1"><code class="py spaces">    </code><code class="py string">"content"</code><code class="py plain">: content,</code></div>
<div class="line number79 index78 alt2"><code class="py spaces">    </code><code class="py string">"labels"</code><code class="py plain">: tags</code></div>
<div class="line number80 index79 alt1"><code class="py spaces">    </code><code class="py plain">}</code></div>
<div class="line number81 index80 alt2"><code class="py spaces">    </code><code class="py plain">insert </code><code class="py keyword">=</code> <code class="py plain">posts.insert(blogId</code><code class="py keyword">=</code><code class="py plain">blog_id, body</code><code class="py keyword">=</code><code class="py plain">body)</code></div>
<div class="line number82 index81 alt1"><code class="py spaces">    </code><code class="py plain">posts_doc </code><code class="py keyword">=</code> <code class="py plain">insert.execute()</code></div>
<div class="line number83 index82 alt2"><code class="py spaces">    </code><code class="py plain">post_id </code><code class="py keyword">=</code> <code class="py plain">posts_doc[</code><code class="py string">"id"</code><code class="py plain">]</code></div>
<div class="line number84 index83 alt1"><code class="py spaces">    </code><code class="py comments">#print(posts_doc)</code></div>
<div class="line number85 index84 alt2"><code class="py spaces">    </code><code class="py plain">os.remove(</code><code class="py string">"blogger.dat"</code><code class="py plain">)</code></div>
<div class="line number86 index85 alt1"><code class="py spaces">    </code><code class="py comments"># 利用最後的 child 節點來儲存 post_id</code></div>
<div class="line number87 index86 alt2"><code class="py spaces">    </code><code class="py plain">to_save_post_id </code><code class="py keyword">=</code> <code class="py plain">p.insertAsLastChild()   </code></div>
<div class="line number88 index87 alt1"><code class="py spaces">    </code><code class="py comments"># 改為內文為空的節點, id 直接標在 head 標題 </code></div>
<div class="line number89 index88 alt2"><code class="py spaces">    </code><code class="py plain">to_save_post_id.b </code><code class="py keyword">=</code> <code class="py plain">""</code></div>
<div class="line number90 index89 alt1"><code class="py spaces">    </code><code class="py plain">to_save_post_id.h </code><code class="py keyword">=</code> <code class="py plain">post_id</code></div>
<div class="line number91 index90 alt2"><code class="py spaces">    </code><code class="py comments"># 因為新增節點, commander 必須 redraw</code></div>
<div class="line number92 index91 alt1"><code class="py spaces">    </code><code class="py plain">c.redraw()</code></div>
<div class="line number93 index92 alt2"><code class="py spaces">    </code><code class="py plain">g.es(</code><code class="py string">"post_id 為"</code><code class="py plain">, post_id)</code></div>
<div class="line number94 index93 alt1"><code class="py spaces">    </code><code class="py plain">g.es(</code><code class="py string">"已經將資料送往 Blogger!"</code><code class="py plain">)</code></div>
<div class="line number95 index94 alt2"><code class="py keyword">except</code><code class="py plain">(client.AccessTokenRefreshError):</code></div>
<div class="line number96 index95 alt1"><code class="py spaces">    </code><code class="py plain">g.es(</code><code class="py string">"error"</code><code class="py plain">)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>edit_to_blogger 按鈕內容:</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_906297">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
<div class="line number71 index70 alt2">71</div>
<div class="line number72 index71 alt1">72</div>
<div class="line number73 index72 alt2">73</div>
<div class="line number74 index73 alt1">74</div>
<div class="line number75 index74 alt2">75</div>
<div class="line number76 index75 alt1">76</div>
<div class="line number77 index76 alt2">77</div>
<div class="line number78 index77 alt1">78</div>
<div class="line number79 index78 alt2">79</div>
<div class="line number80 index79 alt1">80</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py keyword">from</code> <code class="py plain">markdown </code><code class="py keyword">import</code> <code class="py plain">markdown</code></div>
<div class="line number2 index1 alt1"><code class="py keyword">from</code> <code class="py plain">oauth2client </code><code class="py keyword">import</code> <code class="py plain">client</code></div>
<div class="line number3 index2 alt2"><code class="py keyword">from</code> <code class="py plain">googleapiclient </code><code class="py keyword">import</code> <code class="py plain">sample_tools</code></div>
<div class="line number4 index3 alt1"><code class="py keyword">import</code> <code class="py plain">os</code></div>
<div class="line number5 index4 alt2"> </div>
<div class="line number6 index5 alt1"><code class="py plain">os.environ[</code><code class="py string">'TZ'</code><code class="py plain">] </code><code class="py keyword">=</code> <code class="py string">'Asia/Taipei'</code></div>
<div class="line number7 index6 alt2"><code class="py plain">argv </code><code class="py keyword">=</code> <code class="py plain">""</code></div>
<div class="line number8 index7 alt1"><code class="py comments"># 認證並建立服務</code></div>
<div class="line number9 index8 alt2"><code class="py comments"># name of the api is "blogger", version is "v3"</code></div>
<div class="line number10 index9 alt1"><code class="py comments"># description of the api is __doc__</code></div>
<div class="line number11 index10 alt2"><code class="py comments"># file name of the application: location of client_secrets.json</code></div>
<div class="line number12 index11 alt1"><code class="py plain">service, flags </code><code class="py keyword">=</code> <code class="py plain">sample_tools.init(</code></div>
<div class="line number13 index12 alt2"><code class="py spaces">  </code><code class="py plain">argv, </code><code class="py string">'blogger'</code><code class="py plain">, </code><code class="py string">'v3'</code><code class="py plain">, __doc__, </code><code class="py string">"./../../client_secrets.json"</code><code class="py plain">,</code></div>
<div class="line number14 index13 alt1"><code class="py spaces">  </code><code class="py plain">scope</code><code class="py keyword">=</code><code class="py string">'https://www.googleapis.com/auth/blogger'</code><code class="py plain">)</code></div>
<div class="line number15 index14 alt2"> </div>
<div class="line number16 index15 alt1"> </div>
<div class="line number17 index16 alt2"><code class="py keyword">def</code> <code class="py plain">get_cat_tag_content(data):</code></div>
<div class="line number18 index17 alt1"><code class="py spaces">    </code><code class="py comments"># 請注意, 因為 data 來自 .md 的檔案 內容, 第1行為 ---</code></div>
<div class="line number19 index18 alt2"><code class="py spaces">    </code><code class="py comments"># 用跳行符號分割</code></div>
<div class="line number20 index19 alt1"><code class="py spaces">    </code><code class="py plain">data_list </code><code class="py keyword">=</code> <code class="py plain">data.split(</code><code class="py string">"\n"</code><code class="py plain">)</code></div>
<div class="line number21 index20 alt2"><code class="py spaces">    </code><code class="py comments">#第 2 行為 title</code></div>
<div class="line number22 index21 alt1"><code class="py spaces">    </code><code class="py plain">title</code><code class="py keyword">=</code> <code class="py plain">data_list[</code><code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number23 index22 alt2"><code class="py spaces">    </code><code class="py comments">#第 4 行為 category</code></div>
<div class="line number24 index23 alt1"><code class="py spaces">    </code><code class="py plain">category </code><code class="py keyword">=</code> <code class="py plain">data_list[</code><code class="py value">3</code><code class="py plain">]</code></div>
<div class="line number25 index24 alt2"><code class="py spaces">    </code><code class="py comments">#第 5 行為 tags</code></div>
<div class="line number26 index25 alt1"><code class="py spaces">    </code><code class="py plain">tags </code><code class="py keyword">=</code> <code class="py plain">data_list[</code><code class="py value">4</code><code class="py plain">]</code></div>
<div class="line number27 index26 alt2"><code class="py spaces">    </code><code class="py comments"># 有多項資料的 content 型別為數列</code></div>
<div class="line number28 index27 alt1"><code class="py spaces">    </code><code class="py comments"># 再將第 9 行之後的資料數列串回成以跳行隔開的資料</code></div>
<div class="line number29 index28 alt2"><code class="py spaces">    </code><code class="py plain">content </code><code class="py keyword">=</code> <code class="py string">"\n"</code><code class="py plain">.join(data_list[</code><code class="py value">8</code><code class="py plain">:])</code></div>
<div class="line number30 index29 alt1"><code class="py spaces">    </code><code class="py comments"># 先將截斷摘要與內文的 pelican md 檔按符號, 換成 Blogger 的 &lt;!--more--&gt;</code></div>
<div class="line number31 index30 alt2"><code class="py spaces">    </code><code class="py plain">content </code><code class="py keyword">=</code> <code class="py plain">content.replace(</code><code class="py string">'&lt;!-- PELICAN_END_SUMMARY --&gt;'</code><code class="py plain">, </code><code class="py string">'&lt;!--more--&gt;'</code><code class="py plain">)</code></div>
<div class="line number32 index31 alt1"><code class="py spaces">    </code><code class="py comments"># 接著若內容有 ~~~python 與 ~~~ 則換成 Wordpress 格式</code></div>
<div class="line number33 index32 alt2"><code class="py spaces">    </code><code class="py comments">#content = content.replace('~~~python', '[code lang="python"]')</code></div>
<div class="line number34 index33 alt1"><code class="py spaces">    </code><code class="py comments">#content = content.replace('~~~', '[/code]')</code></div>
<div class="line number35 index34 alt2"><code class="py spaces">    </code><code class="py keyword">return</code> <code class="py plain">title, category, tags, content</code></div>
<div class="line number36 index35 alt1"> </div>
<div class="line number37 index36 alt2"><code class="py comments"># 從目前所在節點的 body pan 中取出類別, tags 以及文章內容</code></div>
<div class="line number38 index37 alt1"><code class="py comments"># p.h 為 @clean filename.md</code></div>
<div class="line number39 index38 alt2"><code class="py comments"># 因為要使用 @clean 節點掛上為後的 blogger post_id, 因此改為讀 .md 檔案</code></div>
<div class="line number40 index39 alt1"><code class="py plain">md_filename </code><code class="py keyword">=</code> <code class="py plain">p.h.split(</code><code class="py string">" "</code><code class="py plain">)[</code><code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number41 index40 alt2"><code class="py plain">with </code><code class="py functions">open</code><code class="py plain">(md_filename, </code><code class="py string">'r'</code><code class="py plain">, encoding</code><code class="py keyword">=</code><code class="py string">"utf-8"</code><code class="py plain">) as content_file:</code></div>
<div class="line number42 index41 alt1"><code class="py spaces">    </code><code class="py plain">md_content </code><code class="py keyword">=</code> <code class="py plain">content_file.read()</code></div>
<div class="line number43 index42 alt2"><code class="py comments"># title_str, category_str, tags_str, content = get_cat_tag_content(p.b)</code></div>
<div class="line number44 index43 alt1"><code class="py plain">title_str, category_str, tags_str, content </code><code class="py keyword">=</code> <code class="py plain">get_cat_tag_content(md_content)</code></div>
<div class="line number45 index44 alt2"><code class="py plain">category </code><code class="py keyword">=</code> <code class="py plain">category_str.split(</code><code class="py string">":"</code><code class="py plain">)[</code><code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number46 index45 alt1"><code class="py plain">tags </code><code class="py keyword">=</code> <code class="py plain">tags_str.split(</code><code class="py string">":"</code><code class="py plain">)[</code><code class="py value">1</code><code class="py plain">].split(</code><code class="py string">","</code><code class="py plain">)</code></div>
<div class="line number47 index46 alt2"><code class="py plain">tags.append(category)</code></div>
<div class="line number48 index47 alt1"><code class="py comments"># title 是一個單獨的字串</code></div>
<div class="line number49 index48 alt2"><code class="py plain">title </code><code class="py keyword">=</code> <code class="py plain">title_str.split(</code><code class="py string">":"</code><code class="py plain">)[</code><code class="py value">1</code><code class="py plain">]</code></div>
<div class="line number50 index49 alt1"><code class="py comments"># 將 markdown 格式 content 轉為 html</code></div>
<div class="line number51 index50 alt2"><code class="py plain">content </code><code class="py keyword">=</code> <code class="py plain">markdown(content)</code></div>
<div class="line number52 index51 alt1"><code class="py comments"># 以下處理 content 的 &lt;h2&gt; 標題</code></div>
<div class="line number53 index52 alt2"><code class="py plain">content </code><code class="py keyword">=</code> <code class="py plain">content.replace(</code><code class="py string">"&lt;h2&gt;"</code><code class="py plain">, </code><code class="py string">"&lt;h2&gt;&lt;font size='4'&gt;"</code><code class="py plain">)</code></div>
<div class="line number54 index53 alt1"><code class="py plain">content </code><code class="py keyword">=</code> <code class="py plain">content.replace(</code><code class="py string">"&lt;/h2&gt;"</code><code class="py plain">, </code><code class="py string">"&lt;/font&gt;&lt;/h2&gt;"</code><code class="py plain">)</code></div>
<div class="line number55 index54 alt2"><code class="py comments"># g.es(content)</code></div>
<div class="line number56 index55 alt1"> </div>
<div class="line number57 index56 alt2"><code class="py keyword">try</code><code class="py plain">:</code></div>
<div class="line number58 index57 alt1"><code class="py spaces">    </code><code class="py plain">blogs </code><code class="py keyword">=</code> <code class="py plain">service.blogs()</code></div>
<div class="line number59 index58 alt2"><code class="py spaces">    </code><code class="py comments"># 取得使用者所建立網誌名稱</code></div>
<div class="line number60 index59 alt1"><code class="py spaces">    </code><code class="py plain">blogs </code><code class="py keyword">=</code> <code class="py plain">blogs.listByUser(userId</code><code class="py keyword">=</code><code class="py string">'self'</code><code class="py plain">).execute()</code></div>
<div class="line number61 index60 alt2"><code class="py spaces">    </code><code class="py plain">blog_id </code><code class="py keyword">=</code> <code class="py plain">blogs[</code><code class="py string">"items"</code><code class="py plain">][</code><code class="py value">0</code><code class="py plain">][</code><code class="py string">"id"</code><code class="py plain">]</code></div>
<div class="line number62 index61 alt1"><code class="py spaces">    </code><code class="py comments"># 設法取得原 post 的 id</code></div>
<div class="line number63 index62 alt2"><code class="py spaces">    </code><code class="py plain">postid_outline </code><code class="py keyword">=</code> <code class="py plain">p.getLastChild()</code></div>
<div class="line number64 index63 alt1"><code class="py spaces">    </code><code class="py comments"># 直接從標題取得 post 的 id 號碼</code></div>
<div class="line number65 index64 alt2"><code class="py spaces">    </code><code class="py plain">post_id </code><code class="py keyword">=</code> <code class="py plain">postid_outline.h</code></div>
<div class="line number66 index65 alt1"><code class="py spaces">    </code><code class="py plain">posts </code><code class="py keyword">=</code> <code class="py plain">service.posts()</code></div>
<div class="line number67 index66 alt2"><code class="py spaces">    </code><code class="py comments"># 更新網誌文章時的 body</code></div>
<div class="line number68 index67 alt1"><code class="py spaces">    </code><code class="py plain">body </code><code class="py keyword">=</code> <code class="py plain">{</code></div>
<div class="line number69 index68 alt2"><code class="py spaces">    </code><code class="py string">"kind"</code><code class="py plain">: </code><code class="py string">"blogger#post"</code><code class="py plain">,</code></div>
<div class="line number70 index69 alt1"><code class="py spaces">    </code><code class="py string">"title"</code><code class="py plain">: title,</code></div>
<div class="line number71 index70 alt2"><code class="py spaces">    </code><code class="py string">"content"</code><code class="py plain">: content</code></div>
<div class="line number72 index71 alt1"><code class="py spaces">    </code><code class="py plain">}</code></div>
<div class="line number73 index72 alt2"><code class="py spaces">    </code><code class="py comments"># need to save postId to outline head</code></div>
<div class="line number74 index73 alt1"><code class="py spaces">    </code><code class="py plain">update </code><code class="py keyword">=</code> <code class="py plain">posts.update(blogId</code><code class="py keyword">=</code><code class="py plain">blog_id, postId</code><code class="py keyword">=</code><code class="py plain">post_id, body</code><code class="py keyword">=</code><code class="py plain">body, publish</code><code class="py keyword">=</code><code class="py color1">True</code><code class="py plain">)</code></div>
<div class="line number75 index74 alt2"><code class="py spaces">    </code><code class="py plain">update_doc </code><code class="py keyword">=</code> <code class="py plain">update.execute()</code></div>
<div class="line number76 index75 alt1"><code class="py spaces">    </code><code class="py plain">os.remove(</code><code class="py string">"blogger.dat"</code><code class="py plain">)</code></div>
<div class="line number77 index76 alt2"><code class="py spaces">    </code><code class="py plain">g.es(</code><code class="py string">"post_id 為"</code><code class="py plain">, post_id)</code></div>
<div class="line number78 index77 alt1"><code class="py spaces">    </code><code class="py plain">g.es(</code><code class="py string">"已經將更新資料送往 Blogger!"</code><code class="py plain">)</code></div>
<div class="line number79 index78 alt2"><code class="py keyword">except</code><code class="py plain">(client.AccessTokenRefreshError):</code></div>
<div class="line number80 index79 alt1"><code class="py spaces">    </code><code class="py plain">g.es(</code><code class="py string">"error"</code><code class="py plain">)</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>.......</p>